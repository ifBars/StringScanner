[
  "local fishing, isDead, pressKey, pressKeyNow, catching, busy = false, false, false, false, false, false {File path: C:\\dump\\ak4y-advancedFishing\\client\\main.lua }",
  "      local hash = GetHashKey(qtargetcfg['bar'].ped.model) {File path: C:\\dump\\ap-court\\client\\target.lua }",
  "      local hash = GetHashKey(qtargetcfg['votingSystem']['votingStaff']['ped'].ped.model) {File path: C:\\dump\\ap-government\\client\\target.lua }",
  "                local reg = GetClosestObjectOfType( Config.stores[a[1]].registers[a[2]][1].x,  Config.stores[a[1]].registers[a[2]][1].y,  Config.stores[a[1]].registers[a[2]][1].z, 1.5, GetHashKey('prop_till_01'), false) {File path: C:\\dump\\bb-storerob\\client\\main.lua }",
  "Config.SecondKey = true -- If you enable it (true) you have to press firstkey + secondkey to change pursuit mode , disable it (false) if you want to change your pursuit mode with only one key. {File path: C:\\dump\\blessed_pursuitmode\\config.lua }",
  "                for key, value in pairs(AfterHoursNightclubs.Interior.Name) do {File path: C:\\dump\\bob74_ipl\\dlc_afterhours\\nightclubs.lua }",
  "                    ReleaseNamedRendertarget(GetHashKey(member.target)) {File path: C:\\dump\\bob74_ipl\\dlc_bikers\\gang.lua }",
  "                for key, value in pairs(DiamondPenthouse.Interior.Pattern) do {File path: C:\\dump\\bob74_ipl\\dlc_casino\\penthouse.lua }",
  "                for key, glass in pairs(DoomsdayFacility.PrivacyGlass.Lounge.Glasses) do {File path: C:\\dump\\bob74_ipl\\dlc_doomsday\\facility.lua }",
  "            for key, value in pairs(ExecApartment1.Style.Theme) do {File path: C:\\dump\\bob74_ipl\\dlc_executive\\apartment1.lua }",
  "            for key, value in pairs(ExecApartment3.Style.Theme) do {File path: C:\\dump\\bob74_ipl\\dlc_executive\\apartment3.lua }",
  "            for key, value in pairs(ExecApartment2.Style.Theme) do {File path: C:\\dump\\bob74_ipl\\dlc_executive\\apartment2.lua }",
  "                ReleaseNamedRendertarget(GetHashKey(FinanceOrganization.Office.target)) {File path: C:\\dump\\bob74_ipl\\dlc_finance\\organization.lua }",
  "                    hashL = GetHashKey(style.safe .. \"_l\"), {File path: C:\\dump\\bob74_ipl\\dlc_finance\\office4.lua }",
  "                    hashL = GetHashKey(style.safe .. \"_l\"), {File path: C:\\dump\\bob74_ipl\\dlc_finance\\office2.lua }",
  "                    hashL = GetHashKey(style.safe .. \"_l\"), {File path: C:\\dump\\bob74_ipl\\dlc_finance\\office1.lua }",
  "                    hashL = GetHashKey(style.safe .. \"_l\"), {File path: C:\\dump\\bob74_ipl\\dlc_finance\\office3.lua }",
  "            \"layer_whiskey\", {File path: C:\\dump\\bob74_ipl\\gtav\\floyd.lua }",
  "        for _, parentKey in pairs{\"Biker\", \"FinanceOffices\", \"HighLife\"} do {File path: C:\\dump\\bob74_ipl\\lib\\common.lua }",
  "        RequestModel(GetHashKey(v.model)) {File path: C:\\dump\\boii-hunting\\client\\hunting_c.lua }",
  "        animalhash = GetHashKey('a_c_sharkhammer'), -- Animal ped hash {File path: C:\\dump\\boii-hunting\\shared\\config.lua }",
  "Config.MedicalSearchItem = 'medickeycard' -- Item needed to search medical crates {File path: C:\\dump\\boii-salvagediving\\config.lua }",
  "\t\tCore.Functions.Notify(Config.Lang[\"nomedickey\"], 'error', 3500) {File path: C:\\dump\\boii-salvagediving\\client\\salvagediving_c.lua }",
  "            { name = 'entity_set_arcade_set_trophy_monkey', enable = true }, {File path: C:\\dump\\cfx-gabz-mapdata\\gabz_entityset_mods1.lua }",
  "  if RegisterKeyMapping then {File path: C:\\dump\\chat\\cl_chat.lua }",
  "        local model = GetHashKey(Config.bike['bike']) {File path: C:\\dump\\clubhouse_harmony\\client.lua }",
  "        local model = GetHashKey(Config.bike['bike']) {File path: C:\\dump\\clubhouse_strawberry\\client.lua }",
  "--RegisterKeyMapping('+playerFocus', 'Give Menu Focus', 'keyboard', 'LMENU') {File path: C:\\dump\\context-menu\\client\\main.lua }",
  "RegisterNetEvent('d3:recyclerJob:GiveCarKeys', function(vehiclePlate) {File path: C:\\dump\\d3MBA-recyclerjob\\config.lua }",
  "                    local hash = GetHashKey(\"prop_water_bottle\") {File path: C:\\dump\\d3MBA-recyclerjob\\client\\client-customize.lua }",
  "                    if gotKeys == false and recyclerVehicleReturned == false then {File path: C:\\dump\\d3MBA-recyclerjob\\client\\target\\target.lua }",
  "-- Remove the following lines if you don't want to use the SQL keybinds, requires oxymysql {File path: C:\\dump\\dpemotes\\fxmanifest.lua }",
  "    -- You can disable the menu here / change the keybind. It is currently set to F3 {File path: C:\\dump\\dpemotes\\config.lua }",
  "                Keyboard = { {File path: C:\\dump\\dpemotes\\NativeUI.lua }",
  "    RegisterKeyMapping(\"emotecancel\", \"Cancel current emote\", \"keyboard\", \"X\") {File path: C:\\dump\\dpemotes\\client\\Emote.lua }",
  "    for a in pairsByKeys(DP.Shared) do {File path: C:\\dump\\dpemotes\\client\\Syncing.lua }",
  "    RegisterKeyMapping(\"+ragdoll\", \"Ragdoll your character\", \"keyboard\", Config.RagdollKeybind) {File path: C:\\dump\\dpemotes\\client\\Ragdoll.lua }",
  "local KeyEmoteTable = {} {File path: C:\\dump\\dpemotes\\client\\EmoteMenu.lua }",
  "    for a in pairsByKeys(DP.Walks) do {File path: C:\\dump\\dpemotes\\client\\Walk.lua }",
  "if Config.SqlKeybinding then {File path: C:\\dump\\dpemotes\\client\\Keybinds.lua }",
  "    -- The key shouldn't have any other uppercase letter than the first one! {File path: C:\\dump\\dpemotes\\client\\AnimationList.lua }",
  "function CanUseFavKeyBind() {File path: C:\\dump\\dpemotes\\client\\frameworks\\qb-core.lua }",
  "\t\tTriggerEvent('vehiclekeys:client:SetOwner', QBCore.Functions.GetPlate(vehicle))\t\t {File path: C:\\dump\\driverschool\\client.lua }",
  "    RequestModel(GetHashKey(\"u_f_y_danceburl_01\")) {File path: C:\\dump\\fiv3devs_vanilla\\client.lua }",
  "    local keyboard = exports['qb-input']:ShowInput({ {File path: C:\\dump\\fivem-appearance\\client\\client.lua }",
  "    table.insert(vehs, GetHashKey(v)) {File path: C:\\dump\\Flatbed-Script\\client-flatbed.lua }",
  "local keycode = false {File path: C:\\dump\\gaba-jewelry\\Client\\cclferhuads.lua }",
  "\tN_0x4757f00bc6323cfe(GetHashKey(\"WEAPON_UNARMED\"), 0.8)  {File path: C:\\dump\\gaba-melee\\client.lua }",
  "      local model = GetHashKey(Config.WarehouseObjects[math.random(1, #Config.WarehouseObjects)]) {File path: C:\\dump\\gaba-storage\\client\\main.lua }",
  "Config.KeyMapping       = true                 --## This setting is for those using slotted inventory. (Prevents key operation) {File path: C:\\dump\\gksphone\\config.lua }",
  "    RequestModel(GetHashKey(NormalChargingPropName)) {File path: C:\\dump\\gksphone\\charge\\prop.lua }",
  "function  GiveKeyCar (callback_vehicle, vehicle) {File path: C:\\dump\\gksphone\\client\\clientAPI.lua }",
  "\t\t\t\tGiveKeyCar(callback_vehicle, vehicle) {File path: C:\\dump\\gksphone\\client\\valet.lua }",
  "    ['phone_incall']\t\t= \"You are talking to someone use the up arrow key to pick up the phone\", {File path: C:\\dump\\gksphone\\locales\\en.lua }",
  "    [\"tinder_sucess\"] = \"Hesabınız oluşturuldu, keyifli eşleşmeler :)\", {File path: C:\\dump\\gksphone\\locales\\tr.lua }",
  "    local hash = GetHashKey('prop_ld_binbag_01') {File path: C:\\dump\\gl-ambulance\\client.lua }",
  "        SetWeaponDamageModifierThisFrame(GetHashKey(\"WEAPON_UNARMED\"), 1.0)-- Increase Melee {File path: C:\\dump\\gl-prison\\client\\main.lua }",
  "                _CreatePed(GetHashKey(v.model), vector4(v.coords[i].x, v.coords[i].y, v.coords[i].z -1, v.coords[i].w), v.scenario) {File path: C:\\dump\\gp-traders\\client.lua }",
  "-------                  KEYS              --------            {File path: C:\\dump\\hr-crypto\\config.lua }",
  "                    local objectModel = GetHashKey(v.Model) {File path: C:\\dump\\hr-crypto\\client\\main.lua }",
  "\t\t\tlocal name = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName))) name = name:sub(1,1):upper()..name:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-beanmachine\\client\\garage.lua }",
  "\t\t\tlocal name = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName))) name = name:sub(1,1):upper()..name:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-burgershot\\client\\garage.lua }",
  "\t\t\tv = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName)))\tv = v:sub(1,1):upper()..v:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-cafeprego\\client\\garage.lua }",
  "\t\t\tv = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName)))\tv = v:sub(1,1):upper()..v:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-catcafe\\client\\garage.lua }",
  "\tif not Props[\"keyboard\"] then Props[\"keyboard\"] = makeProp({prop = `prop_keyboard_01b`, coords = vector4(-42.46, -72.93, 59.15, 250.50)}, 1, 0) end {File path: C:\\dump\\jim-jadewok\\client\\client.lua }",
  "\t\t\tv = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName)))\tv = v:sub(1,1):upper()..v:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-jadewok\\client\\garage.lua }",
  "\t\tQBCore.Functions.Progressbar(\"accepted_key\", Loc[Config.Lan][\"tires\"].removing, math.random(7000,10000), false, true, { disableMovement = true, disableCarMovement = true, disableMouse = false, disableCombat = false, }, {File path: C:\\dump\\jim-mechanic\\client\\tires.lua }",
  "\t\tQBCore.Functions.Progressbar(\"accepted_key\", Loc[Config.Lan][\"extras\"].flipping, 12000, false, true, { disableMovement = true, disableCarMovement = true, disableMouse = false,\tdisableCombat = false, }, {File path: C:\\dump\\jim-mechanic\\client\\extras.lua }",
  "\t\t\t\tQBCore.Functions.Progressbar(\"accepted_key\", Loc[Config.Lan][\"xenons\"].install, math.random(3000,7000), false, true, { disableMovement = true, disableCarMovement = true,\tdisableMouse = false, disableCombat = false, }, {File path: C:\\dump\\jim-mechanic\\client\\xenons.lua }",
  "\t\t\t\tfor k, v in pairsByKeys(validMods) do {File path: C:\\dump\\jim-mechanic\\client\\rims.lua }",
  "\tQBCore.Functions.Progressbar(\"accepted_key\", Loc[Config.Lan][\"armour\"].removing, math.random(7000,10000), false, true, { disableMovement = true, disableCarMovement = true, disableMouse = false, disableCombat = false, }, {File path: C:\\dump\\jim-mechanic\\client\\performance.lua }",
  "RegisterKeyMapping('levelUP', 'Boost/Purge lvl Up', 'keyboard', 'PRIOR') {File path: C:\\dump\\jim-mechanic\\client\\nos.lua }",
  "\t\t\t--TriggerEvent(\"vehiclekeys:client:SetOwner\", trim(GetVehicleNumberPlateText(vehicle))) {File path: C:\\dump\\jim-mechanic\\client\\preview.lua }",
  "\t\t\tlocal v = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName))) v = v:sub(1,1):upper()..v:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-mechanic\\client\\locations.lua }",
  "function pairsByKeys(t) {File path: C:\\dump\\jim-mechanic\\shared\\functions.lua }",
  "function pairsByKeys(t) {File path: C:\\dump\\jim-mining\\shared\\shared.lua }",
  "\t\t\tlocal ModelHash = GetHashKey(VehiclesOut[k].model) -- Use Compile-time hashes to get the hash of this model {File path: C:\\dump\\jim-parking\\client.lua }",
  "\t\t\tlocal hash = GetHashKey(v) {File path: C:\\dump\\jim-payments\\atms.lua }",
  "\t\t\t\t\t\t\t-- For example some garage/vehiclekey scripts may break when spawning a car because its retrieving the licence wrong {File path: C:\\dump\\jim-plates\\config.lua }",
  "\tfor k, v in pairsByKeys(Config.Prices) do {File path: C:\\dump\\jim-recycle\\client\\client.lua }",
  "function pairsByKeys(t) {File path: C:\\dump\\jim-recycle\\shared\\functions.lua }",
  "\telseif itemName == \"b52\" or itemName == \"brussian\" or itemName == \"bkamikaze\" or itemName == \"cappucc\" or itemName == \"ccookie\" or itemName == \"iflag\" or itemName == \"kamikaze\" or itemName == \"sbullet\" or itemName == \"voodoo\" or itemName == \"woowoo\" or itemName == \"bloodymary\" then TriggerEvent('animations:client:EmoteCommandStart', {\"whiskey\"}) {File path: C:\\dump\\jim-tequilala\\client\\client.lua }",
  "\t\t\tlocal name = string.lower(GetDisplayNameFromVehicleModel(GetHashKey(spawnName))) name = name:sub(1,1):upper()..name:sub(2)..\" \"..GetMakeNameFromVehicleModel(GetHashKey(tostring(spawnName))) {File path: C:\\dump\\jim-vanillaunicorn\\client\\garage.lua }",
  "\telseif itemName == \"amarettosour\" or itemName == \"bellini\" or itemName == \"bloodymary\" or itemName == \"cosmopolitan\" or itemName == \"longisland\" or itemName == \"margarita\" or itemName == \"pinacolada\" or itemName == \"sangria\" or itemName == \"screwdriver\" or itemName == \"strawdaquiri\" or itemName == \"strawmargarita\" then TriggerEvent('animations:client:EmoteCommandStart', {\"whiskey\"}) {File path: C:\\dump\\jim-vanillaunicorn\\client\\client.lua }",
  "-- Keybind {File path: C:\\dump\\jl-motel\\client\\custom.lua }",
  "AddStateBagChangeHandler('isLoggedIn', nil, function(_bagName, _key, value, _reserved, _replicated) {File path: C:\\dump\\jl-motel\\client\\framework.lua }",
  "    KeyLimit = 3, {File path: C:\\dump\\jl-motel\\shared\\config.lua }",
  "                ThermiteProp = CreateObject(GetHashKey('prop_c4_final_green'), x, y, z + 0.2, true, true, true) {File path: C:\\dump\\kevin-banktrucks\\client\\client.lua }",
  "    'm_key', {File path: C:\\dump\\kevin-oxyruns\\config.lua }",
  "        local ClosestObject = GetClosestObjectOfType(pos.x, pos.y, pos.z, 0.75, GetHashKey(machine), 0, 0, 0) {File path: C:\\dump\\lj-inventory\\client\\main.lua }",
  "    '@RageUI/components/Keys.lua', {File path: C:\\dump\\lvc\\fxmanifest.lua }",
  "------------------MENU KEYBINDING------------------ {File path: C:\\dump\\lvc\\SETTINGS.lua }",
  "local function translateKey(phrase, subs) {File path: C:\\dump\\lvc\\UI\\cl_locale.lua }",
  "\tif key_lock then {File path: C:\\dump\\lvc\\UI\\cl_hud.lua }",
  "Keys.Register(open_menu_key, 'lvc', Lang:t('control.menu_desc'), function() {File path: C:\\dump\\lvc\\UI\\cl_ragemenu.lua }",
  "\t\treg_keymap_nil_1 = '~b~~h~LVC~h~ ~r~~h~ERROR 2~h~~s~: Nil value caught.\\ndetails: (%{i}, %{proposed_tone}, %{profile_name})', {File path: C:\\dump\\lvc\\UI\\locale\\en.lua }",
  "--Prints all KVP keys and values to console {File path: C:\\dump\\lvc\\UTIL\\cl_storage.lua }",
  "function UTIL:FixOversizeKeys(TABLE) {File path: C:\\dump\\lvc\\UTIL\\cl_utils.lua }",
  "key_lock = false {File path: C:\\dump\\lvc\\UTIL\\cl_lvc.lua }",
  "    TriggerEvent('getMapDirectives', function(key, cb, undocb) {File path: C:\\dump\\mapmanager\\mapmanager_shared.lua }",
  "                local hash = GetHashKey(name) {File path: C:\\dump\\mapmanager\\mapmanager_client.lua }",
  "local REGISTER_KEY_MAPPING = assert(RegisterKeyMapping) {File path: C:\\dump\\menuv\\menuv.lua }",
  "local RegisterKeyMapping = assert(RegisterKeyMapping) {File path: C:\\dump\\menuv\\menuv\\menuv.lua }",
  "    [0] = \"KEYBOARD\", {File path: C:\\dump\\menuv\\menuv\\components\\utilities.lua }",
  "            if (not U:Any(event, (t.Events or {}), 'key')) then {File path: C:\\dump\\menuv\\menuv\\components\\item.lua }",
  "            if (not U:Any(event, (t.Events or {}), 'key')) then {File path: C:\\dump\\menuv\\menuv\\components\\menu.lua }",
  "  local hash = (type(model) == \"string\" and GetHashKey(model) or model) {File path: C:\\dump\\meta_libs\\client\\classes\\Vehicle.lua }",
  "Marker = function(type,posX,posY,posZ,dirX,dirY,dirZ,rotX,rotY,rotZ,scaleX,scaleY,scaleZ,red,green,blue,alpha,bobUpAndDown,faceCamera,p19,rotate,textureDict,textureName,drawOnEnts,textDist,text,doFunc,onKey,funcArgs) {File path: C:\\dump\\meta_libs\\client\\classes\\Marker.lua }",
  "exports('SetBlip', function(handle,key,val)   {File path: C:\\dump\\meta_libs\\client\\scripts\\BlipHandler.lua }",
  "GetKeyHeld = function(key) {File path: C:\\dump\\meta_libs\\client\\scripts\\Controls.lua }",
  "  local hash = (type(model) == \"number\" and model or GetHashKey(model)) {File path: C:\\dump\\meta_libs\\client\\scripts\\Streaming.lua }",
  "          if v.doFunc and v.onKey then {File path: C:\\dump\\meta_libs\\client\\scripts\\MarkerHandler.lua }",
  "\t\t\t\tshowHelpText(\"Use the ~y~Arrow Keys~s~ and ~y~ENTER~s~ for the right code block\") {File path: C:\\dump\\mhacking\\mhacking.lua }",
  "\t\t\t\tshowHelpText(\"Use the ~y~Arrow Keys~s~ and ~y~ENTER~s~ for the right code block\") {File path: C:\\dump\\minigame-phone\\mhacking.lua }",
  "    [GetHashKey('WEAPON_ANIMAL')] = 'Animal', {File path: C:\\dump\\monitor\\resource\\cl_logger.lua }",
  "local dismissKey = isRDR and 0xD9D0E1C0 or 22 {File path: C:\\dump\\monitor\\resource\\cl_main.lua }",
  "  local localeKey = isFrozen and 'nui_menu.frozen.froze_player' or 'nui_menu.frozen.unfroze_player' {File path: C:\\dump\\monitor\\resource\\menu\\client\\cl_freeze.lua }",
  "--  visibility, keybinds, focus callbacks's, threads, etc) {File path: C:\\dump\\monitor\\resource\\menu\\client\\cl_base.lua }",
  "        if model == GetHashKey(\"submersible\") or model == GetHashKey(\"submersible2\") then {File path: C:\\dump\\monitor\\resource\\menu\\client\\cl_main_page.lua }",
  "-- NoClip toggle keybind {File path: C:\\dump\\monitor\\resource\\menu\\client\\cl_player_mode.lua }",
  "    GetHashKey(\"a_c_chimp\"), {File path: C:\\dump\\monitor\\resource\\menu\\client\\cl_trollactions.lua }",
  "---@param key string An unique ID for this alert {File path: C:\\dump\\monitor\\resource\\menu\\client\\cl_functions.lua }",
  "_G.KEYBOARD_CONTROL_MAPPING = table.copy(BASE_CONTROL_MAPPING) {File path: C:\\dump\\monitor\\resource\\menu\\vendor\\freecam\\config.lua }",
  "    error('Key `' .. tostring(k) .. '` is not supported.') {File path: C:\\dump\\monitor\\resource\\menu\\vendor\\freecam\\utils.lua }",
  "    TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(veh)) {File path: C:\\dump\\nc-rental\\client\\cl_rentals.lua }",
  "\tnewspaper = CreateObject(GetHashKey(\"prop_cliff_paper\"), 0, 0, 0, true, true, true) {File path: C:\\dump\\news\\client\\client.lua }",
  "    VehicleKeysEvent = 'vehiclekeys:client:SetOwner', -- Vehicle Keys Event {File path: C:\\dump\\nocore-fakeplate\\config.lua }",
  "local function translateKey(phrase, subs) {File path: C:\\dump\\nocore-storageunits\\configs\\locale.lua }",
  "-- handcuffkey {File path: C:\\dump\\nx-cuffs\\config.lua }",
  "    RequestModel(GetHashKey(\"p_cs_cuffs_02_s\")) {File path: C:\\dump\\nx-cuffs\\client\\main.lua }",
  "    RequestModel(GetHashKey(\"prop_inhaler_01\")) {File path: C:\\dump\\nx-policekit\\client\\main.lua }",
  "    model = type(model) == \"string\" and GetHashKey(model) or model {File path: C:\\dump\\nx-spikes\\client\\main.lua }",
  "        if model ==  GetHashKey('prop_consign_01b') then {File path: C:\\dump\\nx-traffic\\client\\main.lua }",
  "\tprop = CreateObject(GetHashKey(\"p_cs_clipboard\"), coords, true, true, true) {File path: C:\\dump\\okokContract\\client.lua }",
  "\t\t\t'fa-keyboard' {File path: C:\\dump\\okokNotify\\config.lua }",
  "\tonCache = function(key, cb) {File path: C:\\dump\\ox_lib\\init.lua }",
  "---@class KeybindProps {File path: C:\\dump\\ox_lib\\imports\\addKeybind\\client.lua }",
  "RegisterNetEvent(cbEvent:format(cache.resource), function(key, ...) {File path: C:\\dump\\ox_lib\\imports\\callback\\client.lua }",
  "--- Call on frame to disable all stored keys. {File path: C:\\dump\\ox_lib\\imports\\disableControls\\client.lua }",
  "function cache:set(key, value) {File path: C:\\dump\\ox_lib\\resource\\cache\\client.lua }",
  "RegisterKeyMapping('cancelprogress', 'Cancel current progress bar', 'keyboard', 'x') {File path: C:\\dump\\ox_lib\\resource\\interface\\client\\progress.lua }",
  "---@field onClose? fun(keyPressed?: 'Escape' | 'Backspace') {File path: C:\\dump\\ox_lib\\resource\\interface\\client\\menu.lua }",
  "    }, { sort_keys = true })) {File path: C:\\dump\\ox_lib\\resource\\interface\\client\\context.lua }",
  "\t{ \"Enable F11 proximity key\", \"$voice_enableProximityCycle\", \"CV_INT\", \"1\" }, {File path: C:\\dump\\pma-voice\\fxmanifest.lua }",
  "\tRegisterKeyMapping('cycleproximity', 'Cycle Proximity', 'keyboard', GetConvar('voice_defaultCycle', 'F11')) {File path: C:\\dump\\pma-voice\\client\\commands.lua }",
  "---creates a phone thread to listen for key presses {File path: C:\\dump\\pma-voice\\client\\module\\phone.lua }",
  "\tRegisterKeyMapping('+radiotalk', 'Talk over Radio', 'keyboard', GetConvar('voice_defaultRadio', 'LMENU')) {File path: C:\\dump\\pma-voice\\client\\module\\radio.lua }",
  "  disableControlKeyInput() {File path: C:\\dump\\PolyZone\\creation\\client\\creation.lua }",
  "  DisplayOnscreenKeyboard(1, textEntry, \"\", defaultText or \"\", \"\", \"\", \"\", maxInputLength or 30) {File path: C:\\dump\\PolyZone\\creation\\client\\utils.lua }",
  "    local key = options.name .. '_' .. tostring(options.data.id) {File path: C:\\dump\\polyzonehelper\\client\\cl_main.lua }",
  "local Keys = { {File path: C:\\dump\\progressbar\\client\\main.lua }",
  "        while not HasModelLoaded(GetHashKey(Objects[i][\"model\"])) do {File path: C:\\dump\\props\\client.lua }",
  "    [GetHashKey(\"weapon_ak47\")] = \"CLASS 3: AK-47\", {File path: C:\\dump\\ps-dispatch\\client\\cl_events.lua }",
  "\tcurrentStreetName = GetStreetNameFromHashKey(currentStreetHash) {File path: C:\\dump\\ps-dispatch\\client\\cl_main.lua }",
  "\t\t\tConfig.Blacklist[GetHashKey(Config.Blacklist[index])] = true {File path: C:\\dump\\ps-fuel\\client\\client.lua }",
  "Config.OpenMenu = 'I' -- https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/keyboard/ {File path: C:\\dump\\ps-hud\\config.lua }",
  "RegisterKeyMapping('menu', 'Open Menu', 'keyboard', Config.OpenMenu) {File path: C:\\dump\\ps-hud\\client.lua }",
  "author 'Flawws, Flakey, Idris and the Project Sloth team' {File path: C:\\dump\\ps-mdt\\fxmanifest.lua }",
  "                TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(veh)) {File path: C:\\dump\\ps-mdt\\client\\cl_impound.lua }",
  "RegisterKeyMapping('mdt', 'Open Police MDT', 'keyboard', 'k') {File path: C:\\dump\\ps-mdt\\client\\main.lua }",
  "RegisterKeyMapping('jobmenu', \"Show Job Management\", \"keyboard\", \"J\") {File path: C:\\dump\\ps-multijob\\client\\cl_main.lua }",
  "RegisterKeyMapping(\"group\", \"Open Group Menu\", \"keyboard\", \"\") {File path: C:\\dump\\ps-playergroups\\client.lua }",
  "            TriggerServerEvent('qb-admin:server:SaveCar', props, QBCore.Shared.Vehicles[vehname], GetHashKey(veh), plate) {File path: C:\\dump\\qb-adminmenu\\client\\events.lua }",
  "-- Key bindings {File path: C:\\dump\\qb-adminmenu\\client\\noclip.lua }",
  "    DisplayOnscreenKeyboard(1, \"FMMC_MPM_NA\", \"\", windows or \"\", \"\", \"\", \"\", number or 30) {File path: C:\\dump\\qb-adminmenu\\client\\client.lua }",
  "\t[2035069708] = 'esskey', {File path: C:\\dump\\qb-adminmenu\\entityhashes\\entity.lua }",
  "                local vehseats = GetVehicleModelNumberOfSeats(GetHashKey(GetEntityModel(veh))) {File path: C:\\dump\\qb-ambulancejob\\client\\dead.lua }",
  "            local vehseats = GetVehicleModelNumberOfSeats(GetHashKey(GetEntityModel(veh))) {File path: C:\\dump\\qb-ambulancejob\\client\\laststand.lua }",
  "        TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(veh)) {File path: C:\\dump\\qb-ambulancejob\\client\\job.lua }",
  "    local street1name = GetStreetNameFromHashKey(street1) {File path: C:\\dump\\qb-ambulancejob\\client\\main.lua }",
  "    'program-keycard:hacking', {File path: C:\\dump\\qb-anticheat\\config.lua }",
  "local function RegisterInApartmentTarget(targetKey, coords, heading, options) {File path: C:\\dump\\qb-apartments\\client\\main.lua }",
  "    [\"safe1\"] = \"Use key\", {File path: C:\\dump\\qb-burglary\\config.lua }",
  "        local street1name = GetStreetNameFromHashKey(street1) {File path: C:\\dump\\qb-burglary\\client\\cl_public.lua }",
  "                [\"model\"] = \"prop_ld_keypad_01\", {File path: C:\\dump\\qb-burglary\\interiors\\tier1.lua }",
  "                [\"model\"] = \"prop_ld_keypad_01\", {File path: C:\\dump\\qb-burglary\\interiors\\tier2.lua }",
  "                [\"name\"] = { \"JD\", \"whiskey\" }, {File path: C:\\dump\\qb-burglary\\interiors\\tier3.lua }",
  "local keyPressed = false {File path: C:\\dump\\qb-commandbinding\\client\\main.lua }",
  "-- The \"color\" key is background of the notification {File path: C:\\dump\\qb-core\\config.lua }",
  "local function keyPressed() {File path: C:\\dump\\qb-core\\client\\drawtext.lua }",
  "    local hash = GetHashKey(vehName) {File path: C:\\dump\\qb-core\\client\\events.lua }",
  "    local modelHash = type(model) == 'string' and GetHashKey(model) or model {File path: C:\\dump\\qb-core\\client\\functions.lua }",
  "local function translateKey(phrase, subs) {File path: C:\\dump\\qb-core\\shared\\locale.lua }",
  "    ['esskey'] = { {File path: C:\\dump\\qb-core\\shared\\vehicles.lua }",
  "\t['bobcat_security_card'] \t\t = {['name'] = 'bobcat_security_card', \t\t\t['label'] = 'Bobcat Security ID', \t\t['weight'] = 1000, \t\t['type'] = 'item', \t\t['image'] = 'bobcatkeycard.png', \t\t['unique'] = false, \t['useable'] = true, \t['shouldClose'] = true,\t   ['combinable'] = nil,   ['description'] = 'Bobcat Security employee ID card.'}, {File path: C:\\dump\\qb-core\\shared\\items.lua }",
  "    tick_time = 2, --- Minutes (Minimum is 2 minutes) 20,160 Requests a month, Its recommended to get the free API key so the crypto script doesnt switch on and off if ratelimit is encountered {File path: C:\\dump\\qb-crypto\\config.lua }",
  "            DisableControlAction(1, 38, true) --Key: E {File path: C:\\dump\\qb-customs\\client\\cl_bennys.lua }",
  "\t\t{ -- Henhouse (smokeys MLO coords) {File path: C:\\dump\\qb-djbooth\\config.lua }",
  "\t\tloadAnimDict(\"anim@heists@keycard@\") {File path: C:\\dump\\qb-doorlock\\client\\main.lua }",
  "        keymapping_description = \"Interact with door locks\", {File path: C:\\dump\\qb-doorlock\\locales\\en.lua }",
  "local function KeyPressed() {File path: C:\\dump\\qb-drawtext\\client\\main.lua }",
  "            QBCore.Functions.Notify(\"You dont have keys to this house!\", \"error\", 3500) {File path: C:\\dump\\qb-garages\\client\\main.lua }",
  "        no_house_keys = \"You don't have the keys for this house garage\", {File path: C:\\dump\\qb-garages\\locales\\en.lua }",
  "description 'QB-KeyMiniGame' {File path: C:\\dump\\qb-keyminigame\\fxmanifest.lua }",
  "KeyMinigameCallback = {} {File path: C:\\dump\\qb-keyminigame\\client\\main.lua }",
  "    RequestModel( GetHashKey( ClassicPed ) ) {File path: C:\\dump\\qb-lumberjack\\client\\peds.lua }",
  "        TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(JobVehicle)) {File path: C:\\dump\\qb-lumberjack\\client\\main.lua }",
  "Config.MailVehicle = GetHashKey(\"boxville\") -- The mail truck vehicle to use. {File path: C:\\dump\\qb-mailjob\\config.lua }",
  "                local VehicleModel = GetHashKey(\"boxville2\") {File path: C:\\dump\\qb-mailjob\\client\\mailjob.lua }",
  "                local MailDoorModel = GetHashKey(\"prop_indus_meet_door_l\") {File path: C:\\dump\\qb-mailjob\\client\\targets.lua }",
  "            for orig_key, orig_value in next, orig, nil do {File path: C:\\dump\\qb-management\\client\\cl_utils.lua }",
  "-- Command and Keymapping {File path: C:\\dump\\qb-menu\\client\\main.lua }",
  "        item = \"m_key\", {File path: C:\\dump\\qb-moneywash\\client.lua }",
  "    local cutter = CreateObject(GetHashKey(\"bkr_prop_fakeid_papercutter\"), coord.x, coord.y, coord.z, true, false, false) {File path: C:\\dump\\qb-moneywash\\anim.lua }",
  "\tlocal trainSpawn = GetHashKey(\"metrotrain\") {File path: C:\\dump\\qb-multicharacter\\client\\main.lua }",
  "        RequestModel(GetHashKey(camModel)) {File path: C:\\dump\\qb-newsjob\\client\\camera.lua }",
  "        TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(veh)) {File path: C:\\dump\\qb-newsjob\\client\\main.lua }",
  "            name = \"cuffkey\", {File path: C:\\dump\\qb-policejob\\config.lua }",
  "RegisterNetEvent('police:client:SetCamera', function(key, isOnline) {File path: C:\\dump\\qb-policejob\\client\\camera.lua }",
  "\treturn IsVehicleModel(vehicle, GetHashKey(Config.PoliceHelicopter)) {File path: C:\\dump\\qb-policejob\\client\\heli.lua }",
  "                TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(veh)) {File path: C:\\dump\\qb-policejob\\client\\job.lua }",
  "                    local street1 = GetStreetNameFromHashKey(s1) {File path: C:\\dump\\qb-policejob\\client\\evidence.lua }",
  "            if GetSelectedPedWeapon(PlayerPedId()) ~= GetHashKey('WEAPON_UNARMED') then {File path: C:\\dump\\qb-policejob\\client\\interactions.lua }",
  "    local street1name = GetStreetNameFromHashKey(street1) {File path: C:\\dump\\qb-policejob\\client\\main.lua }",
  "                        id = 'givehousekey', {File path: C:\\dump\\qb-radialmenu\\config.lua }",
  "local function givekeys() {File path: C:\\dump\\qb-radialmenu\\client\\extraevents.lua }",
  "            for orig_key, orig_value in next, orig, nil do {File path: C:\\dump\\qb-radialmenu\\client\\main.lua }",
  "local detachKeys = {157, 158, 160, 164, 165, 73, 36} {File path: C:\\dump\\qb-radialmenu\\client\\stretcher.lua }",
  "                    TriggerEvent(\"vehiclekeys:client:SetOwner\", GetVehicleNumberPlateText(vehicle)) {File path: C:\\dump\\qb-rentals\\client\\cl_main.lua }",
  "RegisterKeyMapping('createscene', 'Create Scene', 'keyboard', Config.CreateSceneKey) {File path: C:\\dump\\qb-scenes\\client\\client.lua }",
  "Config.CreateSceneKey = 'F9' -- https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/keyboard/ {File path: C:\\dump\\qb-scenes\\shared\\config.lua }",
  "            name = \"whiskey\", {File path: C:\\dump\\qb-shops\\config.lua }",
  "                    exports[\"qb-core\"]:KeyPressed() {File path: C:\\dump\\qb-shops\\client\\main.lua }",
  "description 'QBCore ShowID over player heads while pressing a configured key. It will play an animation while key is pressed.' {File path: C:\\dump\\qb-showid\\fxmanifest.lua }",
  "Config.Key = { {File path: C:\\dump\\qb-showid\\config.lua }",
  "        if Config.Key.Enabled then {File path: C:\\dump\\qb-showid\\client\\main.lua }",
  "    RequestModel( GetHashKey( \"a_c_cow\" ) ) {File path: C:\\dump\\qb-simplefarming\\client\\props.lua }",
  "  milkprop = CreateObject(GetHashKey(\"prop_old_churn_01\"), 0, 0, 0, true, true, true)         {File path: C:\\dump\\qb-simplefarming\\client\\main.lua }",
  "Config.GetUpKey = 38 {File path: C:\\dump\\qb-sit\\config.lua }",
  "\t\tif IsControlPressed(0, Config.GetUpKey) and IsInputDisabled(0) and IsPedOnFoot(playerPed) then {File path: C:\\dump\\qb-sit\\client\\main.lua }",
  "    [\"whiskey\"] = math.random(20, 30), {File path: C:\\dump\\qb-smallresources\\config.lua }",
  "RegisterKeyMapping('hu', 'Put your hands up', 'KEYBOARD', 'X') {File path: C:\\dump\\qb-smallresources\\client\\handsup.lua }",
  "\t[GetHashKey(\"weapon_ak47\")] = 0.5, {File path: C:\\dump\\qb-smallresources\\client\\recoil.lua }",
  "local storeBinoclarKey = 177 {File path: C:\\dump\\qb-smallresources\\client\\binoculars.lua }",
  "-- Register Key {File path: C:\\dump\\qb-smallresources\\client\\seatbelt.lua }",
  "            local ent = GetClosestObjectOfType(objects[k].x, objects[k].y, objects[k].z, 2.0, GetHashKey(objects[k].model), false, false, false) {File path: C:\\dump\\qb-smallresources\\client\\removeentities.lua }",
  "RegisterKeyMapping('point', 'Toggles Point', 'keyboard', 'b') {File path: C:\\dump\\qb-smallresources\\client\\point.lua }",
  "-- Key to open the target eye, here you can find all the names: https://docs.fivem.net/docs/game-references/input-mapper-parameter-ids/keyboard/ {File path: C:\\dump\\qb-target\\init.lua }",
  "\t\telseif not hasFocus and IsDisabledControlPressed(0, Config.MenuControlKey) then {File path: C:\\dump\\qb-target\\client.lua }",
  "        if veh == GetHashKey(Config.AllowedVehicles[i].model) then {File path: C:\\dump\\qb-taxijob\\client\\main.lua }",
  "        TriggerEvent(\"vehiclekeys:client:SetOwner\", QBCore.Functions.GetPlate(veh)) {File path: C:\\dump\\qb-towjob\\client\\main.lua }",
  "        keyholders = {}, {File path: C:\\dump\\qb-traphouse\\config.lua }",
  "local IsKeyHolder = false {File path: C:\\dump\\qb-traphouse\\client\\main.lua }",
  "        have_keys = \"This Person Already Has Keys\", {File path: C:\\dump\\qb-traphouse\\locales\\en.lua }",
  "        have_keys = \"Cette personne a déjà les clefs\", {File path: C:\\dump\\qb-traphouse\\locales\\fr.lua }",
  "        have_keys = \"Esta persona ya tiene llaves\", {File path: C:\\dump\\qb-traphouse\\locales\\es.lua }",
  "        have_keys = \"هذا الشخص لديه بالفعل مفاتيح\", {File path: C:\\dump\\qb-traphouse\\locales\\ar.lua }",
  "\tsundayDriver = false,\t\t\t\t\t\t-- If true, the accelerator response is scaled to enable easy slow driving. Will not prevent full throttle. Does not work with binary accelerators like a keyboard. Set to false to disable. The included stop-without-reversing and brake-light-hold feature does also work for keyboards. {File path: C:\\dump\\qb-vehiclefailure\\config.lua }",
  "Config.SharedKeys = { -- Share keys amongst employees. Employees can lock/unlock any job-listed vehicle {File path: C:\\dump\\qb-vehiclekeys\\config.lua }",
  "description 'QB-VehicleKeys' {File path: C:\\dump\\qb-vehiclekeys\\fxmanifest.lua }",
  "local KeysList = {} {File path: C:\\dump\\qb-vehiclekeys\\client\\main.lua }",
  "        ydhk = 'You don\\'t have keys to this vehicle.', {File path: C:\\dump\\qb-vehiclekeys\\locales\\en.lua }",
  "RegisterNUICallback('givekeys', function(data, cb) {File path: C:\\dump\\qb-vehiclemenu\\client\\client.lua }",
  "RegisterNetEvent(\"weapons:client:SyncRepairShops\", function(NewData, key) {File path: C:\\dump\\qb-weapons\\client\\main.lua }",
  "\t'hasKey', {File path: C:\\dump\\qs-housing\\fxmanifest.lua }",
  "--Here you can see all the available Keys. {File path: C:\\dump\\qs-housing\\config\\config_controls.lua }",
  "        [3] = {text = \"Click on a piece of furniture and drag it around your house, you can also control the height with the arrow keys on your keyboard.\"}, {File path: C:\\dump\\qs-housing\\config\\translations.lua }",
  "    local street = GetStreetNameFromHashKey(s1):gsub(\"%-\", \" \") {File path: C:\\dump\\qs-housing\\config\\config_client.lua }",
  "Config.LimitOfKeys = 5 -- Limit of keys that can be owned by house. {File path: C:\\dump\\qs-housing\\config\\config.lua }",
  "        local street2 = GetStreetNameFromHashKey(street) {File path: C:\\dump\\qs-housing\\config\\config_dispatch.lua }",
  "\t\t\t{ [\"object\"] = \"hei_prop_hei_cs_keyboard\", [\"price\"] = 50, [\"label\"] = \"Keyboard\", {File path: C:\\dump\\qs-housing\\config\\config_furniture.lua }",
  "Config.ESXMenu = 'esx_menu_default' -- You can choose between 'esx_menu_default' or 'nh-context' , if you choose nh-conext you must use nh-keyboard too. {File path: C:\\dump\\qs-housing\\config\\config_framework.lua }",
  "---@class Keys {File path: C:\\dump\\RageUI\\components\\Keys.lua }",
  "    __index = function(table, key) {File path: C:\\dump\\RageUI\\components\\Enum.lua }",
  "        for Index = 1, #Controls[Action or 'Left'].Keys do {File path: C:\\dump\\RageUI\\menu\\MenuController.lua }",
  "            Keys = { {File path: C:\\dump\\RageUI\\menu\\RageUI.lua }",
  "            BadgeTexture = Selected and \"mp_specitem_keycard_black\" or \"mp_specitem_keycard\", {File path: C:\\dump\\RageUI\\menu\\elements\\ItemsBadge.lua }",
  "    TriggerEvent('qb-vehiclekeys:client:setLastPickedVehicle', QBCore.Functions.GetClosestVehicle()) {File path: C:\\dump\\rahe-boosting\\api\\client.lua }",
  "    -- The button which must be pressed to deliver the vehicle at drop-off. By default E (38). If you change this, then also change the key in translation. {File path: C:\\dump\\rahe-boosting\\config\\client.lua }",
  "    local modelHash = GetHashKey(contract.vehicleModel) {File path: C:\\dump\\rahe-boosting\\public\\client.lua }",
  "    -- The distance from which players see the 3D text and can press a key to join {File path: C:\\dump\\rahe-racing\\config\\client.lua }",
  "local keys = { down = 187, up = 188, left = 189, right = 190, select = 191, back = 194 } {File path: C:\\dump\\rcore_darts\\client\\menuapi.lua }",
  "    Keys = { {File path: C:\\dump\\rcore_pool\\config.lua }",
  "    AddTextEntry('TEB_POOL_SETUP', '~' .. WithoutObfuscation(Config.Keys.SETUP_MODIFIER.label) .. '~ + ~' .. WithoutObfuscation(Config.Keys.ENTER.label) .. '~' .. costSuffix .. ' ' .. Config.Text.HINT_SETUP) {File path: C:\\dump\\rcore_pool\\client\\editable_control.lua }",
  "        GetHashKey('prop_pool_cue'),  {File path: C:\\dump\\rcore_pool\\client\\editable_in_hand_pool_cue.lua }",
  "                local isEnterPressed = IsControlJustPressed(0, WithoutObfuscation(Config.Keys.ENTER.code)) or IsDisabledControlJustPressed(0, WithoutObfuscation(Config.Keys.ENTER.code)) {File path: C:\\dump\\rcore_pool\\client\\editable_pool_rack.lua }",
  "    GetHashKey('prop_pooltable_3b'), {File path: C:\\dump\\rcore_pool\\client\\editable_table_config.lua }",
  "local keys = { up = 188, down = 187, left = 189, right = 190, select = 201, back = 202 } {File path: C:\\dump\\rcore_pool\\client\\warmenu.lua }",
  "                    local isEnterPressed = IsControlJustPressed(0, WithoutObfuscation(Config.Keys.ENTER.code)) or IsDisabledControlJustPressed(0, WithoutObfuscation(Config.Keys.ENTER.code)) {File path: C:\\dump\\rcore_pool\\client\\editable_client.lua }",
  "-- Key to open radio {File path: C:\\dump\\rcore_radiocar\\config.lua }",
  "    Keys = { {File path: C:\\dump\\rcore_spray\\config.lua }",
  "    AddTextEntry('RC_CANCEL', \"~\" .. Config.Keys.CANCEL.label .. \"~ \" .. Config.Text.CANCEL) {File path: C:\\dump\\rcore_spray\\client\\cancellable_progress.lua }",
  "    local disabledKeys = { {File path: C:\\dump\\rcore_spray\\client\\client.lua }",
  "    local leftKeyPressed = IsControlPressed( 0, 174) or 0 -- Left {File path: C:\\dump\\safecracker\\client.lua }",
  "Keys = { {File path: C:\\dump\\safecracker\\config.lua }",
  "Config.KeycardItem = 'bobcat_security_card' -- You can replace this.. {File path: C:\\dump\\sd-bobcat\\config.lua }",
  "    local bag = CreateObject(GetHashKey(\"hei_p_m_bag_var22_arm_s\"), 914.74, -2121.97, 31.23,  true,  true, false) {File path: C:\\dump\\sd-bobcat\\client.lua }",
  "Config.SDInputVersion = 'qb' -- nh-keyboad version v1 / v2 / zf / qb {File path: C:\\dump\\sd-stashes\\config.lua }",
  "        local input = exports[\"nh-keyboard\"]:KeyboardInput(inputData) {File path: C:\\dump\\sd-stashes\\client\\sd-menu.lua }",
  "                                GiveWeaponToPed(entity, GetHashKey(v.weapon), 999, true, false) {File path: C:\\dump\\sd-traders\\client\\main.lua }",
  "Keys = { {File path: C:\\dump\\skillbar\\config.lua }",
  "            if IsControlJustPressed(0, Keys[\"E\"]) then {File path: C:\\dump\\skillbar\\client\\main.lua }",
  "\t\tlocal maxe = GetHashKey(Config.Vehicle.hash) {File path: C:\\dump\\sn-sanitation\\client\\function.lua }",
  "    local street = GetStreetNameFromHashKey(GetStreetNameAtCoord(coords.x, coords.y, coords.z)) {File path: C:\\dump\\snipe-drugzones\\client\\cl_customise.lua }",
  "    local hash = GetHashKey('s_m_y_construct_01') {File path: C:\\dump\\snowk-jobs-elec\\lua\\client.lua }",
  "                    model = GetHashKey(model, _r) {File path: C:\\dump\\spawnmanager\\spawnmanager.lua }",
  "\tlocal mhash = GetHashKey(name) {File path: C:\\dump\\truck_logistics\\utils.lua }",
  "AddEventHandler('truck_logistics:startContract', function(key,contract_data,location) {File path: C:\\dump\\truck_logistics\\client.lua }",
  "\t['cancel_job'] = 167,\t\t\t\t\t\t-- Key to cancel the active job (167 = F6) [Hold key 2 seconds] {File path: C:\\dump\\truck_logistics\\config.lua }",
  "local fakeKeyButtons = { {File path: C:\\dump\\ultra-keypackhack\\client.lua }",
  "local keys = { up = 172, down = 173, left = 174, right = 175, select = 176, back = 177 } {File path: C:\\dump\\warmenu\\warmenu.lua }",
  "local function RestoreData( obj, getFunc, setFunc, setBackupFunc, key ) {File path: C:\\dump\\wk_wars2x\\cl_sync.lua }",
  "-- Returns if the given table is empty, includes numerical and non-numerical key values {File path: C:\\dump\\wk_wars2x\\cl_utils.lua }",
  "-- Sets the defaults of all keybinds {File path: C:\\dump\\wk_wars2x\\config.lua }",
  "\tUI loading and key binds registering {File path: C:\\dump\\wk_wars2x\\cl_radar.lua }",
  "-- keybind -> Opens through a button press (Config.Button) {File path: C:\\dump\\zerio-radio\\config.lua }",
  "    Prop = GetHashKey('prop_cs_hand_radio'), {File path: C:\\dump\\zerio-radio\\client\\functions.lua }",
  "                                    if IsControlJustPressed(1, v_.interaction_key) then {File path: C:\\dump\\zv-k4-fleeca\\client\\functions.lua }",
  "                                if IsControlJustPressed(1, v.interaction_key) then {File path: C:\\dump\\zv-paleto\\client\\functions.lua }"
]